@charset "UTF-8";

// 包装器设置
// -----------------------------------------------------
// 自适应宽度
$wrapperAutoWidth:        true !default; // false 固定宽度
// 绝对定位
$wrapperAbsolute:         true !default; // false 不定位
// 头部
$wrapHeader:              40px $color01 $color01 !default; // 高度、外部背景色、内部背景色         
// 容器
$wrapInnerWidth:          1200px !default; // 容器内部宽度
$wrapContainerBg:         $white $white; // 容器外部、内部背景色
$innerBoxScroll:          true !default; // 超出显示滚动条，false 不显示
$fixedBoxScroll:          false !default; // 固定区域滚动条，false 不显示

// 底部
$wrapHasFooter:           false !default; // false 不含底部
$wrapFooter:              30px $blackLight; // 底部高度及背景色

// header背景图片
$wrapHeaderImgBgOutput:   false !default; // 输出头部背景图片
$wrapHeaderImgBgUrl:      #010f34 !default; // 路径、平铺方式
$wrapHeaderImgBgSize:     cover !default; // 大小

// header动态显隐
$wrapHeaderDynamic:       false !default; // 仅在流布局使用

// 公用
%layoutAbsolute {
  position: absolute;
  left: 0;
  right: 0;
}

%containerAbsolute {
  @extend %layoutAbsolute;
  top: nth($wrapHeader,1);
  overflow-x: hidden;
  overflow-y: auto;
}

.t-wrapper {
  width: 100%;
}

.t-wrap-header {
  height: nth($wrapHeader,1);
  background-color: nth($wrapHeader,2);
  // 如果绝对定位
  @if $wrapperAbsolute {
    @extend %layoutAbsolute; 
    top: 0;
  }
  // 如果输出图片背景
  @if $wrapHeaderImgBgOutput {
    background: $wrapHeaderImgBgUrl;
    background-size: $wrapHeaderImgBgSize; 
  }
}

#t-container {
  background-color: nth($wrapContainerBg,2);
}

// header动态显隐
@if $wrapHeaderDynamic and not $wrapperAbsolute {
  .t-wrap-header {
    width: 100%;
    position: fixed;
    top: 0;
    transition: top 0.3s;
    -moz-transition: top 0.3s;
    -webkit-transition: top 0.3s;
  }
  .nav-up {
    top: -(nth($wrapHeader,1));
  }
  .nav-down {}
  .t-wrap-container {
    padding-top: nth($wrapHeader,1);
  }
}

// 自适应宽度
// -----------------------------------------------------
@if $wrapperAutoWidth {
  
  .t-wrap-container {
    // 如果绝对定位
    @if $wrapperAbsolute and $wrapHasFooter {
      @extend %containerAbsolute;
      bottom: nth($wrapFooter,1);
    }
    @if $wrapperAbsolute and not $wrapHasFooter {
      @extend %containerAbsolute;
      bottom: 0;
    }
    background-color: nth($wrapContainerBg,1);
  }

  // 含底部
  @if $wrapHasFooter {
    .t-wrap-footer {
      // 如果绝对定位
      @if $wrapperAbsolute {
        @extend %layoutAbsolute;
        bottom: 0;
      }
      height: nth($wrapFooter,1);
      background-color: nth($wrapFooter,2);
    }
  }@else {
    .t-wrap-footer {
      @include hidden;
    }
  }

}

// 固定宽度
// -----------------------------------------------------
@if not $wrapperAutoWidth {

  .t-wrap-container {
    // 如果绝对定位
    @if $wrapperAbsolute and $wrapHasFooter {
      @extend %containerAbsolute;
      bottom: nth($wrapFooter,1);
    }
    @if $wrapperAbsolute and not $wrapHasFooter {
      @extend %containerAbsolute;
      bottom: 0;
    }
    background-color: nth($wrapContainerBg,1);
  }

  // 含底部
  @if $wrapHasFooter {
    .t-wrap-footer {
      // 如果绝对定位
      @if $wrapperAbsolute {
        @extend %layoutAbsolute;
        bottom: 0;
      }
      height: nth($wrapFooter,1);
      background-color: nth($wrapFooter,2);
    }
  }@else {
    .t-wrap-footer {
      @include hidden;
    }
  }

  #t-header, #t-container, #t-footer {
    width: $wrapInnerWidth;
    @include center-block;
  }

}

// header
@import "header";

// footer
@import "footer";

// layout
@import "layout";
